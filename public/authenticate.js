'use strict';

var passport = require('passport');
var LocalStrategy = require('passport-local').Strategy;
var FacebookStrategy = require('passport-facebook').Strategy;

var User = require('./models/user');
var config = require('./config');

exports.local = passport.use(new LocalStrategy({ 'usernameField': 'email' }, User.authenticate()));
passport.serializeUser(User.serializeUser());
passport.deserializeUser(User.deserializeUser());

exports.facebook = passport.use(new FacebookStrategy({
  clientID: config.facebook.clientID,
  clientSecret: config.facebook.clientSecret,
  callbackURL: config.facebook.callbackURL
}, function (accessToken, refreshToken, profile, done) {
  User.findOne({ OauthId: profile.id }, function (err, user) {
    if (err) {
      console.log(err); // handle errors!
    }
    if (!err && user !== null) {
      done(null, user);
    } else {
      user = new User({
        username: profile.displayName
      });
      user.OauthId = profile.id;
      user.OauthToken = accessToken;
      user.save(function (err) {
        if (err) {
          console.log(err); // handle errors!
        } else {
          console.log("saving user ...");
          done(null, user);
        }
      });
    }
  });
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9hdXRoZW50aWNhdGUuanMiXSwibmFtZXMiOlsicGFzc3BvcnQiLCJyZXF1aXJlIiwiTG9jYWxTdHJhdGVneSIsIlN0cmF0ZWd5IiwiRmFjZWJvb2tTdHJhdGVneSIsIlVzZXIiLCJjb25maWciLCJleHBvcnRzIiwibG9jYWwiLCJ1c2UiLCJhdXRoZW50aWNhdGUiLCJzZXJpYWxpemVVc2VyIiwiZGVzZXJpYWxpemVVc2VyIiwiZmFjZWJvb2siLCJjbGllbnRJRCIsImNsaWVudFNlY3JldCIsImNhbGxiYWNrVVJMIiwiYWNjZXNzVG9rZW4iLCJyZWZyZXNoVG9rZW4iLCJwcm9maWxlIiwiZG9uZSIsImZpbmRPbmUiLCJPYXV0aElkIiwiaWQiLCJlcnIiLCJ1c2VyIiwiY29uc29sZSIsImxvZyIsInVzZXJuYW1lIiwiZGlzcGxheU5hbWUiLCJPYXV0aFRva2VuIiwic2F2ZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxXQUFXQyxRQUFRLFVBQVIsQ0FBZjtBQUNBLElBQUlDLGdCQUFnQkQsUUFBUSxnQkFBUixFQUEwQkUsUUFBOUM7QUFDQSxJQUFJQyxtQkFBbUJILFFBQVEsbUJBQVIsRUFBNkJFLFFBQXBEOztBQUVBLElBQUlFLE9BQU9KLFFBQVEsZUFBUixDQUFYO0FBQ0EsSUFBSUssU0FBU0wsUUFBUSxVQUFSLENBQWI7O0FBRUFNLFFBQVFDLEtBQVIsR0FBZ0JSLFNBQVNTLEdBQVQsQ0FBYSxJQUFJUCxhQUFKLENBQWtCLEVBQUMsaUJBQWdCLE9BQWpCLEVBQWxCLEVBQTRDRyxLQUFLSyxZQUFMLEVBQTVDLENBQWIsQ0FBaEI7QUFDQVYsU0FBU1csYUFBVCxDQUF1Qk4sS0FBS00sYUFBTCxFQUF2QjtBQUNBWCxTQUFTWSxlQUFULENBQXlCUCxLQUFLTyxlQUFMLEVBQXpCOztBQUVBTCxRQUFRTSxRQUFSLEdBQW1CYixTQUFTUyxHQUFULENBQWEsSUFBSUwsZ0JBQUosQ0FBcUI7QUFDbkRVLFlBQVVSLE9BQU9PLFFBQVAsQ0FBZ0JDLFFBRHlCO0FBRW5EQyxnQkFBY1QsT0FBT08sUUFBUCxDQUFnQkUsWUFGcUI7QUFHbkRDLGVBQWFWLE9BQU9PLFFBQVAsQ0FBZ0JHO0FBSHNCLENBQXJCLEVBSzlCLFVBQVNDLFdBQVQsRUFBc0JDLFlBQXRCLEVBQW9DQyxPQUFwQyxFQUE2Q0MsSUFBN0MsRUFBbUQ7QUFDakRmLE9BQUtnQixPQUFMLENBQWEsRUFBRUMsU0FBU0gsUUFBUUksRUFBbkIsRUFBYixFQUFzQyxVQUFTQyxHQUFULEVBQWNDLElBQWQsRUFBb0I7QUFDeEQsUUFBR0QsR0FBSCxFQUFRO0FBQ05FLGNBQVFDLEdBQVIsQ0FBWUgsR0FBWixFQURNLENBQ1k7QUFDbkI7QUFDRCxRQUFJLENBQUNBLEdBQUQsSUFBUUMsU0FBUyxJQUFyQixFQUEyQjtBQUN6QkwsV0FBSyxJQUFMLEVBQVdLLElBQVg7QUFDRCxLQUZELE1BRU87QUFDTEEsYUFBTyxJQUFJcEIsSUFBSixDQUFTO0FBQ2R1QixrQkFBVVQsUUFBUVU7QUFESixPQUFULENBQVA7QUFHQUosV0FBS0gsT0FBTCxHQUFlSCxRQUFRSSxFQUF2QjtBQUNBRSxXQUFLSyxVQUFMLEdBQWtCYixXQUFsQjtBQUNBUSxXQUFLTSxJQUFMLENBQVUsVUFBU1AsR0FBVCxFQUFjO0FBQ3RCLFlBQUdBLEdBQUgsRUFBUTtBQUNORSxrQkFBUUMsR0FBUixDQUFZSCxHQUFaLEVBRE0sQ0FDWTtBQUNuQixTQUZELE1BRU87QUFDTEUsa0JBQVFDLEdBQVIsQ0FBWSxpQkFBWjtBQUNBUCxlQUFLLElBQUwsRUFBV0ssSUFBWDtBQUNEO0FBQ0YsT0FQRDtBQVFEO0FBQ0YsR0FyQkQ7QUFzQkQsQ0E1QjZCLENBQWIsQ0FBbkIiLCJmaWxlIjoiYXV0aGVudGljYXRlLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHBhc3Nwb3J0ID0gcmVxdWlyZSgncGFzc3BvcnQnKTtcbnZhciBMb2NhbFN0cmF0ZWd5ID0gcmVxdWlyZSgncGFzc3BvcnQtbG9jYWwnKS5TdHJhdGVneTtcbnZhciBGYWNlYm9va1N0cmF0ZWd5ID0gcmVxdWlyZSgncGFzc3BvcnQtZmFjZWJvb2snKS5TdHJhdGVneTtcblxudmFyIFVzZXIgPSByZXF1aXJlKCcuL21vZGVscy91c2VyJyk7XG52YXIgY29uZmlnID0gcmVxdWlyZSgnLi9jb25maWcnKTtcblxuZXhwb3J0cy5sb2NhbCA9IHBhc3Nwb3J0LnVzZShuZXcgTG9jYWxTdHJhdGVneSh7J3VzZXJuYW1lRmllbGQnOidlbWFpbCd9LFVzZXIuYXV0aGVudGljYXRlKCkpKTtcbnBhc3Nwb3J0LnNlcmlhbGl6ZVVzZXIoVXNlci5zZXJpYWxpemVVc2VyKCkpO1xucGFzc3BvcnQuZGVzZXJpYWxpemVVc2VyKFVzZXIuZGVzZXJpYWxpemVVc2VyKCkpO1xuXG5leHBvcnRzLmZhY2Vib29rID0gcGFzc3BvcnQudXNlKG5ldyBGYWNlYm9va1N0cmF0ZWd5KHtcbiAgY2xpZW50SUQ6IGNvbmZpZy5mYWNlYm9vay5jbGllbnRJRCxcbiAgY2xpZW50U2VjcmV0OiBjb25maWcuZmFjZWJvb2suY2xpZW50U2VjcmV0LFxuICBjYWxsYmFja1VSTDogY29uZmlnLmZhY2Vib29rLmNhbGxiYWNrVVJMXG4gIH0sXG4gIGZ1bmN0aW9uKGFjY2Vzc1Rva2VuLCByZWZyZXNoVG9rZW4sIHByb2ZpbGUsIGRvbmUpIHtcbiAgICBVc2VyLmZpbmRPbmUoeyBPYXV0aElkOiBwcm9maWxlLmlkIH0sIGZ1bmN0aW9uKGVyciwgdXNlcikge1xuICAgICAgaWYoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7IC8vIGhhbmRsZSBlcnJvcnMhXG4gICAgICB9XG4gICAgICBpZiAoIWVyciAmJiB1c2VyICE9PSBudWxsKSB7XG4gICAgICAgIGRvbmUobnVsbCwgdXNlcik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB1c2VyID0gbmV3IFVzZXIoe1xuICAgICAgICAgIHVzZXJuYW1lOiBwcm9maWxlLmRpc3BsYXlOYW1lXG4gICAgICAgIH0pO1xuICAgICAgICB1c2VyLk9hdXRoSWQgPSBwcm9maWxlLmlkO1xuICAgICAgICB1c2VyLk9hdXRoVG9rZW4gPSBhY2Nlc3NUb2tlbjtcbiAgICAgICAgdXNlci5zYXZlKGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgIGlmKGVycikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTsgLy8gaGFuZGxlIGVycm9ycyFcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJzYXZpbmcgdXNlciAuLi5cIik7XG4gICAgICAgICAgICBkb25lKG51bGwsIHVzZXIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbikpO1xuIl19